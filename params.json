{  
   "name":"ngFacebook",
   "tagline":"Facebook SDK wrapper for AngularJS Apps",
   "body":"**ngFacebook** is a Facebook SDK wrapper for AngularJS Apps. It aims to minimum configuration Facebook support to AngularJS applications.\r\n\r\n## Installation\r\n\r\n### Bower\r\n\r\nInstall the `ngFacebook ` package through Bower...\r\n\r\n```\r\nbower install ngFacebook\r\n```\r\n\r\nInclude the sources in your HTML...\r\n\r\n```html\r\n <script src=\"bower_components/angular/angular.min.js\"></script>\r\n <script src=\"bower_components/ngFacebook/version/v0.0.3/ngFacebook.min.js\"></script>\r\n```\r\n\r\n### Manual\r\n\r\nDownload the [minified source](https://github.com/ninjatronic/angular-facebook/blob/v0.0.3/version/v0.0.3/ngFacebook.min.js) and include in your build as desired.\r\n\r\n## Support\r\n\r\nCurrently supported features of the Facebook SDK:\r\n\r\n* User Authentication (login, logout etc)\r\n* Graph API\r\n* UI\r\n\r\n## Usage\r\n\r\n### Initialisation\r\n\r\nInclude the module in your app and initialise it during the application config block in the same manner you would initialise the FB SDK:\r\n\r\n```javascript\r\nangular\r\n    .module('my-angularjs-app', ['facebook'])\r\n    .config(['$facebookProvider', function($facebookProvider) {\r\n        $facebookProvider.init({\r\n            appId: 'myFbApplicationId',\r\n            channel: '//path/to/channel.html'\r\n        });\r\n    }]);\r\n```\r\n\r\n### Methods\r\n\r\nUse `$facebook` much as you would `FB`. Calls are the same as to the traditional `FB` object, except that they use promises instead of callbacks.\r\n\r\n```javascript\r\nangular\r\n    .module('my-angularjs-app')\r\n    .controller('my-controller', ['$facebook', function($facebook) {\r\n        // bind directly to the response promise\r\n        $scope.loginStatus = $facebook.getLoginStatus();\r\n        \r\n        // use the promise in code\r\n        $facebook.getLoginStatus().then(\r\n            function(response) {\r\n                $scope.loginResponse = response;\r\n            },\r\n            function(response) {\r\n                $scope.loginError = response.error;\r\n            }\r\n        );\r\n    }]);\r\n```\r\n\r\nThe one exception to this is `$facebook.getAuthResponse` which is synchronous.\r\n\r\n### Events\r\n\r\nEvents from the facebook SDK are then broadcast through the $rootScope of the application. The naming convention is to use the same event name as the Facebook SDK, prepended with 'facebook.' - so 'auth.authResponseChange' is broadcast as 'facebook.auth.authResponseChange. Consume these events as you would any other angular event:\r\n\r\n```javascript\r\nangular\r\n    .module('my-angularjs-app')\r\n    .controller('another-controller', ['$scope', '$facebook', function($scope, $facebook) {\r\n        $scope.$on('facebook.auth.authResponseChange', function(response) {\r\n            $scope.authStatus = response.status;\r\n        });\r\n    }]);\r\n```",
   "google":"",
   "note":"Don't delete this file! It's used internally to help with page regeneration."
}